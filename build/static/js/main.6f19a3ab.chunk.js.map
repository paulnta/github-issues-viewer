{"version":3,"sources":["svgIcons/LightBulbFull.js","svgIcons/LightBulbOutline.js","components/Theme.js","components/ThemeToggle.js","components/InputBase.js","components/InputSearch.js","svgIcons/Github.js","components/Layout.js","components/LayoutContent.js","components/LayoutHeader.js","components/Avatar.js","components/Skeleton.js","components/TimeAgo.js","constants.js","svgIcons/Info.js","components/IssueStateChip.js","components/IssueHeader.js","components/Markdown.js","components/Code.js","components/CodeInline.js","components/IssueComment.js","components/IssueCommentList.js","routes/IssuePage.js","components/RepoListItem.js","routes/SearchPage.js","components/IssueStateIcon.js","components/IssueListItem.js","components/IssuesLoader.js","components/Pagination.js","components/IssueList.js","components/IssueListFilter.js","components/RepoHeader.js","routes/IssuesPage.js","routes/NotFoundPage.js","routes/index.js","App.js","serviceWorker.js","components/CssBaseline.js","index.js"],"names":["LightBulbFull","props","react_default","a","createElement","SvgIcon_default","d","LightBulbOutline","common","MuiButtonBase","disableRipple","Themes","dark","createMuiTheme","Object","objectSpread","palette","type","primary","main","background","default","paper","contrast","typography","useNextVariants","light","grey","React","createContext","ThemeContextProvider","Provider","ThemeContext","Consumer","Theme","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","changeTheme","setState","window","localStorage","setItem","state","getItem","children","theme","value","core_styles","Component","ThemeToggle","_ref","Tooltip_default","title","Checkbox_default","color","icon","svgIcons_LightBulbOutline","checkedIcon","svgIcons_LightBulbFull","checked","onChange","e","withStyles","root","paddingLeft","spacing","unit","paddingRight","borderRadius","shape","classes","className","placeholder","objectWithoutProperties","Input_default","assign","cx","disableUnderline","fullWidth","searchButton","height","width","padding","text","secondary","components_InputBase","endAdornment","InputAdornment_default","position","IconButton_default","disabled","tabIndex","Search_default","Github","Layout","onSubmitSearch","preventDefault","history","q","input","current","push","concat","createRef","_this$props","AppBar_default","elevation","appBar","Toolbar_default","toolbar","toolbarContent","centered","Link","to","svgIcons_Github","logo","grow","onSubmit","components_InputSearch","inputProps","ref","searchInput","components_ThemeToggle","compose","withRouter","appBarBackground","header","getContrastText","maxWidth","margin","minHeight","display","alignItems","top","left","transform","transition","transitions","create","&:focus","flex","paddingTop","paddingBottom","components_LayoutContent","src","Avatar_default","Span","createSkeletonElement","Avatar","AvatarBase","length","repeat","withSkeleton","withSkeletonProvider","dummyData","arguments","undefined","predicate","loading","styling","createSkeletonProvider","dayjs","extend","relativeTime","TimeAgo","date","fromNow","IssueState","Info","fontWeight","marginLeft","white","Chip_default","svgIcons_Info","label","author","number","url","createdAt","statusChip","marginRight","openButton","right","commentsCount","timeAgo","components_TimeAgo","issueNumber","issueState","IssueStateChip","Typography_default","variant","gutterBottom","headline","component","subtitle","href","OpenInNew_default","renderers","code","@global",".hljs","overflowX","fontFamily","fontSize",".hljs-keyword, .hljs-literal, .hljs-symbol, .hljs-name",".hljs-link","textDecoration",".hljs-built_in, .hljs-type",".hljs-number, .hljs-class",".hljs-string, .hljs-meta-string",".hljs-regexp, .hljs-template-tag",".hljs-subst, .hljs-function, .hljs-title, .hljs-params, .hljs-formula",".hljs-comment, .hljs-quote","fontStyle",".hljs-doctag",".hljs-meta, .hljs-meta-keyword, .hljs-tag",".hljs-variable, .hljs-template-variable",".hljs-attr, .hljs-attribute, .hljs-builtin-name",".hljs-section",".hljs-emphasis",".hljs-strong",".hljs-bullet, .hljs-selector-tag, .hljs-selector-id, .hljs-selector-class, .hljs-selector-attr, .hljs-selector-pseudo",".hljs-addition","backgroundColor",".hljs-deletion","overflow","language","react_highlight_default","inlineCode","paragraph","style","body1","& p","marginBottom","& img","_ref2","react_markdown_default","login","body","avatar","content","bodyProps","avatarUrl","Skeleton_Avatar","Paper_default","components_Markdown","source","COMMENTS_QUERY","gql","_templateObject","IssueCommentList","owner","name","placeholderCount","react_apollo_browser_umd","query","variables","data","error","toConsumableArray","Array","keys","map","key","components_IssueComment","repository","issue","comments","edges","_ref3","comment","node","id","ISSUE_QUERY","IssuePage_templateObject","Issue","match","_match$params","params","Number","Fragment","_ref2$issue","_issue$author","_issue$comments","components_LayoutHeader","breadcrumb","ArrowBack_default","components_IssueHeader","issueHeader","totalCount","components_IssueCommentList","Math","min","marginTop","StarIcon","StarBorder","description","&.loading","pointerEvents","starIcon","starCount","lineHeight","ListItem_default","button","ListItemText_default","disableTypography","noWrap","ListItemIcon_default","toFixed","SEARCH_REPO","SearchPage_templateObject","LoadingState","RepoListItem","mixins","gutters","location","queryString","parse","search","SearchPage_LoadingState","List_default","repo","nameWithOwner","stargazers","&.closed","closed","Comment","CommentIcon","StateIcon","IssueStateIcon","IssueListItem","commentCount","other","commentIcon","defaultProps","ISSUES_QUERY","IssuesLoader_templateObject","IssuesLoader","pageSize","fetchMore","_data$repository","issues","_ref3$pageInfo","pageInfo","_ref3$edges","edge","hasNextPage","onLoadMore","cursor","endCursor","updateQuery","prev","_ref4","fetchMoreResult","justifyContent","Button_default","onClick","Loading","components_IssueListItem","IssueList","components_IssuesLoader","IssueList_Loading","components_Pagination","openedCount","closedCount","Tabs_default","indicatorColor","Tab_default","REPO_INFO_QUERY","IssuesPage_templateObject","Repo","handleChangeState","_this2","_queryString$parse$st","_ref2$openedIssues","openedIssues","_ref2$closedIssues","closedIssues","components_RepoHeader","components_IssueListFilter","filters","components_IssueList","textAlign","Routes","Switch","Route","path","exact","SearchPage","IssuesPage","IssuePage","NotFoundPage","App","components_Layout","routes","Boolean","hostname","CssBaseline","propTypes","PropTypes","fadeColor","emphasize","html","WebkitFontSmoothing","MozOsxFontSmoothing","boxSizing","*, *::before, *::after","@media print","strong","@keyframes pending-animation","0%","opacity","50%","100%",".skeleton-pending","userSelect","animationName","animationDuration","animationIterationCount","animationTimingFunction","httpLink","createHttpLink","uri","headers","authorization","process","client","ApolloClient","link","ApolloLink","from","apolloLogger","cache","InMemoryCache","ReactDOM","render","BrowserRouter","components_Theme","components_CssBaseline","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6f19a3ab.chunk.js","sourcesContent":["import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nconst LightBulbFull = (props) => (\n  <SvgIcon {...props}>\n    <path d=\"m9,21c0,0.55 0.45,1 1,1l4,0c0.55,0 1,-0.45 1,-1l0,-1l-6,0l0,1zm3,-19c-3.86,0 -7,3.14 -7,7c0,2.38 1.19,4.47 3,5.74l0,2.26c0,0.55 0.45,1 1,1l6,0c0.55,0 1,-0.45 1,-1l0,-2.26c1.81,-1.27 3,-3.36 3,-5.74c0,-3.86 -3.14,-7 -7,-7z\" />\n  </SvgIcon>\n);\n\nexport default LightBulbFull;","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nconst LightBulbOutline = (props) => (\n  <SvgIcon {...props}>\n    <path d=\"M9 21c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-1H9v1zm3-19C8.14 2 5 5.14 5 9c0 2.38 1.19 4.47 3 5.74V17c0 .55.45 1 1 1h6c.55 0 1-.45 1-1v-2.26c1.81-1.27 3-3.36 3-5.74 0-3.86-3.14-7-7-7zm2.85 11.1l-.85.6V16h-4v-2.3l-.85-.6C7.8 12.16 7 10.63 7 9c0-2.76 2.24-5 5-5s5 2.24 5 5c0 1.63-.8 3.16-2.15 4.1z\" />\n  </SvgIcon>\n);\n\nexport default LightBulbOutline;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { MuiThemeProvider } from '@material-ui/core';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport grey from '@material-ui/core/colors/grey';\n\nconst common = {\n  props: {\n    MuiButtonBase: {\n      disableRipple: true, // No more ripple, on the whole application 💣!\n    },\n  }\n};\n\nconst Themes = {\n  dark: createMuiTheme({\n    ...common,\n    palette: {\n      type: 'dark',\n      primary: {\n        main: \"#40a9f3\"\n      },\n      background: {\n        default: '#2D2E32',\n        paper: '#333438',\n        contrast: '#242529'\n      }\n    },\n    typography: {\n      useNextVariants: true,\n    },\n  }),\n  light: createMuiTheme({\n    ...common,\n    palette: {\n      type: 'light',\n      primary: {\n        main: \"#2C4FFE\"\n      },\n      background: {\n        contrast: grey[100],\n      }\n    },\n    typography: {\n      useNextVariants: true,\n    },\n  }),\n};\n\nconst {\n  Provider: ThemeContextProvider,\n  Consumer: ThemeContext,\n} = React.createContext();\n\n\nclass Theme extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: window.localStorage.getItem('gh-theme') || 'dark',\n      changeTheme: this.changeTheme,\n    };\n  }\n\n  changeTheme = (type) => {\n    this.setState({ type });\n    window.localStorage.setItem('gh-theme', type);\n  }\n\n  render() {\n    const { children } = this.props;\n    const { type } = this.state;\n    const theme = Themes[type] || Themes.dark;\n    return (\n      <ThemeContextProvider value={this.state}>\n        <MuiThemeProvider theme={theme}>\n          {children}\n        </MuiThemeProvider>\n      </ThemeContextProvider>\n    );\n  }\n}\n\nTheme.propTypes = {\n  children: PropTypes.node,\n};\n\nexport { ThemeContext };\nexport default Theme;\n","import React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport LightBulbFull from '../svgIcons/LightBulbFull';\nimport LightBulbOutline from '../svgIcons/LightBulbOutline';\nimport { ThemeContext } from './Theme';\n\nconst ThemeToggle = () => (\n  <ThemeContext>\n    {({ type, changeTheme }) => {\n\n      const onToggle = (e) => {\n        const value = type === 'dark' ? 'light' : 'dark';\n        changeTheme(value);\n      };\n\n      return (\n        <Tooltip title=\"Toogle dark/light theme\">\n          <Checkbox\n            color=\"default\"\n            icon={<LightBulbOutline />}\n            checkedIcon={<LightBulbFull />}\n            checked={type === 'dark'}\n            onChange={onToggle}\n          />\n        </Tooltip>\n      );\n    }}\n  </ThemeContext>\n);\n\nexport default ThemeToggle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport cx from 'classnames';\nimport Input from '@material-ui/core/Input';\n\nconst styles = theme => ({\n  root: {\n    background: theme.palette.background.paper,\n    paddingLeft: theme.spacing.unit,\n    paddingRight: theme.spacing.unit / 2,\n    borderRadius: theme.shape.borderRadius,\n  },\n});\n\nconst InputBase = ({ classes, className, value, onChange, placeholder, ...props }) => (\n  <Input\n    className={cx(classes.root, className)}\n    onChange={onChange}\n    value={value}\n    placeholder={placeholder}\n    disableUnderline\n    fullWidth\n    {...props}\n  />\n);\n\nInputBase.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string),\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n};\n\nexport default withStyles(styles)(InputBase);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Search from '@material-ui/icons/Search';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport InputBase from './InputBase';\n\nconst styles = theme => ({\n  searchButton: {\n    height: 30,\n    width: 30,\n    padding: 0,\n    color: theme.palette.text.secondary,\n  }\n});\n\nconst InputSearch = ({ classes, ...props }) => (\n  <InputBase\n    endAdornment={\n      <InputAdornment position=\"end\">\n        <IconButton\n          disabled={props.disabled}\n          tabIndex={-1}\n          className={classes.searchButton}\n          type=\"submit\"\n        >\n          <Search />\n        </IconButton>\n      </InputAdornment>\n    }\n    {...props}\n  />\n);\n\nInputSearch.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string),\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n};\n\nexport default withStyles(styles)(InputSearch);\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nconst Github = (props) => (\n  <SvgIcon {...props}>\n    <path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\" />\n  </SvgIcon>\n);\n\nexport default Github;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport cx from 'classnames';\nimport compose from 'recompose/compose';\nimport { Link, withRouter } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport ThemeToggle from './ThemeToggle';\nimport InputSearch from './InputSearch';\nimport GithubIcon from '../svgIcons/Github';\n\nconst styles = theme => {\n  const appBarBackground = theme.palette.background.contrast;\n\n  return {\n    appBar: {\n      background: appBarBackground,\n    },\n    header: {\n      background: appBarBackground,\n      color: theme.palette.getContrastText(appBarBackground)\n    },\n    centered: {\n      width: '100%',\n      maxWidth: '900px',\n      margin: '0 auto',\n    },\n    toolbar: {\n      position: 'relative',\n      minHeight: 60,\n    },\n    toolbarContent: {\n      display: 'flex',\n      alignItems: 'center',\n    },\n    main: {\n      padding: '24px 16px 24px',\n    },\n    logo: {\n      height: 32,\n      width: 'auto',\n      position: 'absolute',\n      top: '50%',\n      left: 16,\n      transform: 'translateY(-50%)',\n      color: theme.palette.text.primary,\n    },\n    searchInput: {\n      transition: theme.transitions.create('width'),\n      width: 130,\n      '&:focus': {\n        width: 200,\n      }\n    },\n    grow: {\n      flex: 1,\n    }\n  };\n};\n\n\nclass Layout extends React.Component {\n  static propTypes = {\n    classes: PropTypes.objectOf(PropTypes.string),\n    children: PropTypes.node,\n    history: PropTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.input = React.createRef();\n  }\n\n  onSubmitSearch = (e) => {\n    e.preventDefault();\n    const { history } = this.props;\n    const q = this.input.current.value;\n    history.push(`/search?q=${q}`);\n  }\n\n  render() {\n    const { classes, children } = this.props;\n    return (\n      <div>\n        <AppBar elevation={0} className={classes.appBar} position=\"static\">\n          <Toolbar className={classes.toolbar}>\n            <div className={cx(classes.toolbarContent, classes.centered)}>\n              <Link to=\"/\">\n                <GithubIcon className={classes.logo} />\n              </Link>\n              <div className={classes.grow} />\n              <form onSubmit={this.onSubmitSearch}>\n                <InputSearch\n                  fullWidth={false}\n                  placeholder=\"Search for repo\"\n                  inputProps={{\n                    ref: this.input,\n                    className: classes.searchInput,\n                  }}\n                />\n              </form>\n              <ThemeToggle />\n            </div>\n          </Toolbar>\n        </AppBar>\n        {children}\n      </div>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withStyles(styles),\n)(Layout);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport cx from 'classnames';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    maxWidth: '900px',\n    margin: '0 auto',\n    padding: 16,\n  },\n});\n\nconst LayoutContent = ({ classes, className, children }) => (\n  <div className={cx(classes.root, className)}>\n    {children}\n  </div>\n);\n\nLayoutContent.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string),\n  className: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default withStyles(styles)(LayoutContent);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Content from './LayoutContent';\n\nconst styles = theme => ({\n  root: {\n    background: theme.palette.background.contrast,\n    paddingTop: 24,\n    paddingBottom: 32,\n    color: theme.palette.getContrastText(\n      theme.palette.background.contrast,\n    )\n  },\n});\n\nconst LayoutHeader = ({ classes, children }) => (\n  <div className={classes.root}>\n    <Content>\n      {children}\n    </Content>\n  </div>\n);\n\nLayoutHeader.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string),\n  children: PropTypes.node,\n};\n\nexport default withStyles(styles)(LayoutHeader);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport MuiAvatar from '@material-ui/core/Avatar';\n\nconst styles = theme => ({\n  root: {\n    borderRadius: 2,\n    height: 46,\n    width: 46,\n  },\n});\n\nconst Avatar = ({ classes, className, src, ...props }) => (\n  <MuiAvatar\n    className={cx(classes.root, className)}\n    src={src}\n    {...props}\n  />\n);\n\nAvatar.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string),\n  className: PropTypes.string,\n  src: PropTypes.string,\n};\n\nexport default withStyles(styles)(Avatar);\n","import { createSkeletonProvider, createSkeletonElement } from \"@trainline/react-skeletor\";\nimport AvatarBase from './Avatar';\n\nexport const Span = createSkeletonElement('span');\nexport const Avatar = createSkeletonElement(AvatarBase);\n\nexport const placeholder = length => 'x '.repeat(length / 2);\n\nexport const withSkeleton = createSkeletonElement;\n\nexport const withSkeletonProvider = (\n  dummyData = {},\n  predicate = props => props.loading,\n  styling = 'skeleton-pending',\n) => createSkeletonProvider(dummyData, predicate, styling);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\n\ndayjs.extend(relativeTime);\n\nconst TimeAgo = ({ date }) => (\n  <span>{dayjs(date).fromNow()}</span>\n);\n\nTimeAgo.propTypes = {\n  date: PropTypes.string,\n};\n\nexport default TimeAgo;\n","\nexport const IssueState = {\n  OPEN: 'OPEN',\n  CLOSED: 'CLOSED',\n};","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nconst Info = (props) => (\n  <SvgIcon {...props}>\n    <path d=\"M12,2.22857143 C17.3828571,2.22857143 21.7714286,6.61714286 21.7714286,12 C21.7714286,17.3828571 17.3828571,21.7714286 12,21.7714286 C6.6073024,21.7619925 2.23800749,17.3926976 2.22857143,12 C2.22857143,6.61714286 6.61714286,2.22857143 12,2.22857143 Z M12,0 C5.38285714,0 0,5.38285714 0,12 C0,18.6171429 5.38285714,24 12,24 C18.6171429,24 24,18.6171429 24,12 C24,5.38285714 18.6171429,0 12,0 Z M13.7142857,5.14285714 L10.2857143,5.14285714 L10.2857143,13.7142857 L13.7142857,13.7142857 L13.7142857,5.14285714 Z M13.7142857,15.4285714 L10.2857143,15.4285714 L10.2857143,18.8571429 L13.7142857,18.8571429 L13.7142857,15.4285714 Z\" />\n  </SvgIcon>\n);\n\nexport default Info;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport ChipBase from '@material-ui/core/Chip';\n\nimport Info from '../svgIcons/Info';\n\nconst styles = theme => ({\n  root: {\n    background: '#01D48A',\n    color: '#fff',\n    fontWeight: 500,\n  },\n  icon: {\n    height: 16,\n    width: 16,\n    marginLeft: theme.spacing.unit,\n    color: theme.palette.common.white,\n  },\n});\n\nconst Chip = ({ classes, className, children }) => (\n  <ChipBase\n    className={cx(classes.root, className)}\n    icon={<Info color=\"inherit\" className={classes.icon} />}\n    label=\"Open\"\n  />\n);\n\nChip.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string),\n  className: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default withStyles(styles)(Chip);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport { withStyles } from '@material-ui/core/styles';\nimport cx from 'classnames';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport OpenIcon from '@material-ui/icons/OpenInNew';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withSkeletonProvider, Span } from './Skeleton';\n\nimport TimeAgo from './TimeAgo';\nimport { IssueState } from '../constants';\nimport IssueStateChip from './IssueStateChip';\n\n\nconst styles = theme => ({\n  root: {\n    position: 'relative',\n    paddingRight: 48,\n  },\n  secondary: {\n    color: theme.palette.text.secondary,\n  },\n  statusChip: {\n    marginRight: theme.spacing.unit,\n  },\n  openButton: {\n    position: 'absolute',\n    top: -8,\n    right: 0,\n  },\n});\n\nconst IssueHeader = ({ classes, className, children, title, author, commentsCount, number, createdAt, state, url }) => {\n  const timeAgo = createdAt && <TimeAgo date={createdAt} />;\n  const issueNumber = number && <span className={classes.secondary}>#{number}</span>;\n  const issueState = state && <IssueStateChip className={classes.statusChip} state={state} />;\n\n  return (\n    <div className={cx(classes.root, className)}>\n      <Typography\n        variant=\"h5\"\n        gutterBottom\n        className={classes.headline}\n      >\n        <Span>{title} {issueNumber}</Span>\n      </Typography>\n\n\n      <Typography\n        variant=\"body1\"\n        color=\"textSecondary\"\n        component=\"span\"\n        className={classes.subtitle}\n      >\n        {issueState}\n        <Span> <strong>{author}</strong> opened this issue {timeAgo} · {commentsCount} comments</Span>\n      </Typography>\n\n      {url && (\n        <Tooltip title=\"Open in github\">\n          <IconButton className={classes.openButton} href={url}>\n            <OpenIcon color=\"action\" />\n          </IconButton>\n        </Tooltip>\n      )}\n    </div>\n  );\n};\n\nIssueHeader.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string),\n  className: PropTypes.string,\n  title: PropTypes.string,\n  number: PropTypes.number,\n  createdAt: PropTypes.string,\n  author: PropTypes.string,\n  state: PropTypes.oneOf([IssueState.OPEN, IssueState.CLOSED]),\n  commentsCount: PropTypes.number,\n  loading: PropTypes.bool,\n};\n\nexport default compose(\n  withSkeletonProvider({\n    title: 'xxx '.repeat(15),\n    author: 'xxx '.repeat(3),\n    number: null,\n    url: null,\n    state: null,\n    createdAt: null,\n  }),\n  withStyles(styles),\n)(IssueHeader);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactMarkdown from 'react-markdown';\nimport Typography from '@material-ui/core/Typography';\nimport cx from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Span } from './Skeleton';\nimport Code from './Code';\nimport CodeInline from './CodeInline';\n\nconst styles = theme => ({\n  root: {\n    ...theme.typography.body1,\n    color: theme.palette.text.primary,\n    '& p': {\n      marginBottom: theme.spacing.unit * 2,\n    },\n    '& img': {\n      width: '100%',\n      height: 'auto',\n    }\n  },\n});\n\nconst renderers = {\n  code: Code,\n  inlineCode: CodeInline,\n  paragraph: ({ children, style }) => (\n    <Typography variant=\"body1\">\n      <Span>{children}</Span>\n    </Typography>\n  ),\n};\n\nconst Markdown = ({ classes, className, ...props }) => (\n  <ReactMarkdown\n    className={cx(classes.root, className)}\n    renderers={renderers}\n    {...props}\n  />\n);\n\nMarkdown.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string),\n  className: PropTypes.string,\n};\n\nexport default withStyles(styles)(Markdown);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Highlight from 'react-highlight';\n\n\nconst styles = theme => ({\n  '@global': {\n    '.hljs': {\n      display: 'block',\n      overflowX: 'auto',\n      padding: '1em',\n      background: theme.palette.background.contrast,\n      color: '#DCDCDC',\n      borderRadius: 2,\n      fontFamily: \"'Roboto Mono', monospace;\",\n      fontSize: 14,\n    },\n    '.hljs-keyword, .hljs-literal, .hljs-symbol, .hljs-name': {\n      color: '#569CD6'\n    },\n    '.hljs-link': {\n      color: '#569CD6',\n      textDecoration: 'underline'\n    },\n    '.hljs-built_in, .hljs-type': {\n      color: '#4EC9B0'\n    },\n    '.hljs-number, .hljs-class': {\n      color: '#B8D7A3'\n    },\n    '.hljs-string, .hljs-meta-string': {\n      color: '#D69D85'\n    },\n    '.hljs-regexp, .hljs-template-tag': {\n      color: '#9A5334'\n    },\n    '.hljs-subst, .hljs-function, .hljs-title, .hljs-params, .hljs-formula': {\n      color: '#DCDCDC'\n    },\n    '.hljs-comment, .hljs-quote': {\n      color: '#57A64A',\n      fontStyle: 'italic'\n    },\n    '.hljs-doctag': {\n      color: '#608B4E'\n    },\n    '.hljs-meta, .hljs-meta-keyword, .hljs-tag': {\n      color: '#9B9B9B'\n    },\n    '.hljs-variable, .hljs-template-variable': {\n      color: '#BD63C5'\n    },\n    '.hljs-attr, .hljs-attribute, .hljs-builtin-name': {\n      color: '#9CDCFE'\n    },\n    '.hljs-section': {\n      color: 'gold'\n    },\n    '.hljs-emphasis': {\n      fontStyle: 'italic'\n    },\n    '.hljs-strong': {\n      fontWeight: 'bold'\n    },\n    '.hljs-bullet, .hljs-selector-tag, .hljs-selector-id, .hljs-selector-class, .hljs-selector-attr, .hljs-selector-pseudo': {\n      color: '#D7BA7D'\n    },\n    '.hljs-addition': {\n      backgroundColor: '#144212',\n      display: 'inline-block',\n      width: '100%'\n    },\n    '.hljs-deletion': {\n      backgroundColor: '#600',\n      display: 'inline-block',\n      width: '100%'\n    }\n  },\n  root: {\n    width: '100%',\n    overflow: 'auto',\n  },\n});\n\nconst Code = ({ classes, language, value }) => (\n  <Highlight className={cx(classes.root, language)}>\n    {value}\n  </Highlight>\n);\n\nCode.propTypes = {\n  language: PropTypes.string,\n  value: PropTypes.string,\n};\n\nexport default withStyles(styles)(Code);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  root: {\n    background: theme.palette.background.contrast,\n    fontFamily: \"'Roboto Mono', monospace;\",\n    padding: '1px 2px',\n    fontSize: 13,\n    borderRadius: theme.shape.borderRadius,\n  },\n});\n\nconst CodeInline = ({ classes, children }) => (\n  <code className={classes.root}>\n    {children}\n  </code>\n);\n\nCodeInline.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string),\n  children: PropTypes.node,\n};\n\nexport default withStyles(styles)(CodeInline);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport compose from 'recompose/compose';\n\nimport Markdown from './Markdown';\nimport TimeAgo from './TimeAgo';\nimport { withSkeletonProvider, Avatar, Span } from './Skeleton';\n\n\nconst styles = theme => {\n  const spacing = theme.spacing.unit;\n  return {\n    root: {\n      position: 'relative',\n      paddingLeft: 62,\n      marginBottom: spacing * 3,\n    },\n    avatar: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      marginRight: spacing * 2,\n    },\n    content: {\n      padding: `${spacing}px ${spacing * 3}px ${spacing * 3}px`,\n    },\n    toolbar: {\n      minHeight: 46,\n    },\n    author: {\n      marginRight: theme.spacing.unit / 2,\n    }\n  };\n};\n\nconst IssueComment = ({ classes, body: bodyProps, author, createdAt }) => {\n  const { avatarUrl, login } = author || {};\n  const body = bodyProps || '*No description provided*';\n\n  return (\n    <div className={classes.root}>\n      <Avatar className={classes.avatar} src={avatarUrl} />\n      <Paper elevation={0}>\n        <Toolbar className={classes.toolbar}>\n          <Typography variant=\"subtitle2\" className={classes.author}>\n            <Span>{login}</Span>\n          </Typography>\n          {createdAt && (\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              commented <TimeAgo date={createdAt} />\n            </Typography>\n          )}\n        </Toolbar>\n        <div className={classes.content}>\n          <Markdown source={body} />\n        </div>\n      </Paper>\n    </div>\n  );\n};\n\nIssueComment.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string),\n  createdAt: PropTypes.string,\n  body: PropTypes.string,\n  author: PropTypes.shape({\n    avatarUrl: PropTypes.string,\n    login: PropTypes.string,\n  }),\n};\n\nexport default compose(\n  withSkeletonProvider({\n    author: {\n      login: 'xxx '.repeat(5)\n    },\n    body: 'xxx '.repeat(130),\n  }),\n  withStyles(styles),\n)(IssueComment);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\n\nimport IssueComment from './IssueComment';\n\nconst COMMENTS_QUERY = gql`\n  query IssueCommentList($owner: String!, $name: String!, $number: Int!) {\n    repository(owner: $owner, name: $name) {\n      issue(number: $number) {\n        id\n        comments(first: 30) {\n          edges {\n            node {\n              id\n              author { login, avatarUrl }\n              body\n              createdAt\n            }  \n          }\n        }\n      }\n    }\n  }\n`;\n\nconst IssueCommentList = ({ owner, name, number, placeholderCount }) => (\n  <Query\n    query={COMMENTS_QUERY}\n    variables={{ owner, name, number }}\n  >\n    {({ data, loading, error }) => {\n      if (error) {\n        return 'Error';\n      }\n\n      if (loading) {\n        return [...Array(placeholderCount).keys()].map(key => (\n          <IssueComment key={key} loading />\n        ));\n      }\n\n      const { comments } = data.repository.issue;\n      return comments.edges.map(({ node: comment }) => (\n        <IssueComment\n          key={comment.id}\n          body={comment.body}\n          createdAt={comment.createdAt}\n          author={comment.author}\n        />\n      ));\n    }}\n  </Query >\n);\n\nIssueCommentList.propTypes = {\n  owner: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.number,\n  placeholderCount: PropTypes.number,\n};\n\nexport default IssueCommentList;\n","import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport { Link } from 'react-router-dom';\n\nimport Header from '../components/LayoutHeader';\nimport Content from '../components/LayoutContent';\nimport IssueHeader from '../components/IssueHeader';\nimport IssueComment from '../components/IssueComment';\nimport IssueCommentList from '../components/IssueCommentList';\n\nconst styles = {\n  breadcrumb: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  issueHeader: {\n    marginTop: 24,\n    paddingLeft: 62,\n  },\n};\n\nconst ISSUE_QUERY = gql`\n  query IssueQuery($owner: String!, $name: String!, $number: Int!) {\n    repository(owner: $owner, name: $name) {\n      issue(number: $number) {\n        id\n        number\n        title\n        author { login, avatarUrl }\n        createdAt\n        comments { totalCount }\n        state\n        body\n        url\n      }\n    }\n  }\n`;\n\nclass Issue extends Component {\n  render() {\n    const { classes, match } = this.props;\n    const { owner, name } = match.params;\n    const issueNumber = Number(match.params.number);\n    return (\n      <>\n        <Query\n          query={ISSUE_QUERY}\n          variables={{\n            owner,\n            name,\n            number: issueNumber,\n          }}\n        >\n          {({ data, loading, error }) => {\n            if (error) return 'Error';\n\n            const { issue = {} } = data.repository || {};\n            const { author = {}, comments = {} } = issue;\n\n            return (\n              <>\n                <Header>\n                  <div className={classes.breadcrumb}>\n                    <Link to={`/${owner}/${name}`}>\n                      <IconButton>\n                        <ArrowBack color=\"action\" />\n                      </IconButton>\n                    </Link>\n                    <Typography variant=\"h6\">{owner} / {name} </Typography>\n                  </div>\n                  <IssueHeader\n                    className={classes.issueHeader}\n                    loading={loading}\n                    title={issue.title}\n                    number={issue.number}\n                    createdAt={issue.createdAt}\n                    state={issue.state}\n                    author={author ? author.login : null}\n                    commentsCount={comments.totalCount}\n                    url={issue.url}\n                  />\n                </Header>\n                <Content>\n                  <IssueComment\n                    loading={loading}\n                    author={issue.author}\n                    body={issue.body}\n                    createdAt={issue.createdAt}\n                  />\n                  {!loading && (\n                    <IssueCommentList\n                      owner={owner}\n                      name={name}\n                      number={issueNumber}\n                      placeholderCount={Math.min(comments.totalCount, 3)}\n                    />\n                  )}\n                </Content>\n              </>\n            );\n          }}\n        </Query>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(Issue);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport cx from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport StarBorder from '@material-ui/icons/Star';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\n\nimport { withSkeleton, withSkeletonProvider, Span, placeholder } from './Skeleton';\n\nconst styles = theme => ({\n  root: {\n    '&.loading': {\n      // remove mouse interactions when loading\n      pointerEvents: 'none',\n    },\n  },\n  title: {\n    fontWeight: 500,\n  },\n  starIcon: {\n    height: 18,\n    width: 18,\n    marginRight: 4,\n  },\n  starCount: {\n    lineHeight: '18px',\n  }\n});\n\n// skeleton icon\nconst StarIcon = withSkeleton(StarBorder);\n\nconst formatStarCount = (value) => {\n  if (!value) return null;\n  return value > 999 ? Number((value / 1000).toFixed(1)) + 'k' : value;\n};\n\nconst BaseListItem = ({ classes, className, title, description, starCount, loading }) => (\n  <ListItem className={cx(classes.root, className, { loading })} button>\n    <ListItemText\n      disableTypography\n      primary={\n        <Typography className={classes.title} color=\"primary\" variant=\"subtitle1\" noWrap>\n          <Span>{title}</Span>\n        </Typography>\n      }\n      secondary={\n        <Typography color=\"textSecondary\">\n          <Span>{description}</Span>\n        </Typography>\n      }\n    />\n    <ListItemIcon>\n      <>\n        <StarIcon color=\"action\" className={classes.starIcon} />\n        <Typography color=\"textSecondary\" className={classes.starCount}>\n          {formatStarCount(starCount)}\n        </Typography>\n      </>\n    </ListItemIcon>\n  </ListItem>\n);\n\nBaseListItem.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string),\n  className: PropTypes.string,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  starCount: PropTypes.number,\n  loading: PropTypes.bool,\n};\n\nexport default compose(\n  withSkeletonProvider({\n    title: placeholder(14),\n    description: placeholder(90),\n  }),\n  withStyles(styles),\n)(BaseListItem);\n","\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport queryString from 'query-string';\nimport { Link } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\n\nimport Content from '../components/LayoutContent';\nimport RepoListItem from '../components/RepoListItem';\n\nconst styles = theme => ({\n  root: {},\n  title: {\n    ...theme.mixins.gutters(),\n  }\n});\n\nconst SEARCH_REPO = gql`\n  query SearchRepo($query: String!) {\n    search(query: $query, type: REPOSITORY, first: 10) {\n      edges {\n        node {\n          ...on Repository {\n            id\n            name\n            nameWithOwner\n            owner { login }\n            description\n            stargazers {\n              totalCount\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst DEFAULT_QUERY = 'stars:>1000';\n\nconst LoadingState = () => (\n  <>\n    <RepoListItem loading />\n    <RepoListItem loading />\n    <RepoListItem loading />\n    <RepoListItem loading />\n  </>\n);\n\nconst Search = ({ classes, children, location }) => {\n  const params = queryString.parse(location.search);\n  return (\n    <>\n      <Content className={classes.root}>\n        <Typography className={classes.title} variant=\"h6\" gutterBottom>\n          Search Repositories\n        </Typography>\n        <Query query={SEARCH_REPO} variables={{ query: params.q || DEFAULT_QUERY }}>\n          {({ data, loading, error }) => {\n            if (loading) return <LoadingState />;\n            if (error) return 'error...';\n            const { edges } = data.search;\n            return (\n              <List>\n                {\n                  edges.map(({ node: repo }) => {\n                    return (\n                      <Link\n                        key={repo.id}\n                        to={`/${repo.owner.login}/${repo.name}`}\n                      >\n                        <RepoListItem\n                          title={repo.nameWithOwner}\n                          description={repo.description}\n                          starCount={repo.stargazers.totalCount}\n                        />\n                      </Link>\n                    );\n                  })\n                }\n              </List>\n            );\n          }}\n        </Query>\n      </Content>\n    </>\n  );\n};\n\nSearch.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string),\n  children: PropTypes.node,\n};\n\nexport default withStyles(styles)(Search);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { IssueState } from '../constants';\nimport Info from '../svgIcons/Info';\n\nconst styles = theme => ({\n  icon: {\n    height: 18,\n    width: 18,\n    color: '#01D48A',\n    '&.closed': {\n      color: theme.palette.error.main,\n    },\n  },\n});\n\nconst IssueStateIcon = ({ classes, className, state }) => {\n  const closed = state === IssueState.CLOSED;\n  return (\n    <Info className={cx(classes.icon, className, { closed })} />\n  );\n};\n\nIssueStateIcon.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string),\n  className: PropTypes.string,\n  state: PropTypes.oneOf([IssueState.OPEN, IssueState.CLOSED]),\n};\n\nexport default withStyles(styles)(IssueStateIcon);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport compose from 'recompose/compose';\nimport cx from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport CommentIcon from '@material-ui/icons/ModeCommentOutlined';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport { IssueState } from \"../constants\";\nimport TimeAgo from \"./TimeAgo\";\nimport IssueStateIcon from \"./IssueStateIcon\";\nimport { Span, withSkeletonProvider, withSkeleton, placeholder } from \"./Skeleton\";\n\nconst styles = theme => ({\n  commentIcon: {\n    height: 18,\n    width: 18,\n    color: theme.palette.text.secondary,\n    marginRight: theme.spacing.unit / 2,\n  },\n  root: {\n    '&.loading': {\n      // remove mouse interactions when loading\n      pointerEvents: 'none',\n    },\n  },\n  title: {\n    fontWeight: 500,\n  },\n});\n\n// skeleton icons\nconst Comment = withSkeleton(CommentIcon);\nconst StateIcon = withSkeleton(IssueStateIcon);\n\nconst IssueListItem = ({ classes, title, number, createdAt, state, author, commentCount, loading, ...other }) => (\n  <ListItem className={cx(classes.root, { loading })} button {...other}>\n    <ListItemIcon>\n      <StateIcon state={state} />\n    </ListItemIcon>\n    <ListItemText\n      disableTypography\n      primary={\n        <Typography variant=\"subtitle1\" noWrap className={classes.title}>\n          <Span>{title}</Span>\n        </Typography>\n      }\n      secondary={\n        <Typography variant=\"caption\" noWrap color=\"textSecondary\">\n          <Span>#{number} opened <TimeAgo date={createdAt} /> by {author}</Span>\n        </Typography>\n      }\n    />\n    {(loading || commentCount > 0) && (\n      <ListItemIcon>\n        <>\n          <Comment className={classes.commentIcon} />\n          <Typography variant=\"caption\">{commentCount}</Typography>\n        </>\n      </ListItemIcon>\n    )}\n  </ListItem>\n);\n\nIssueListItem.propTypes = {\n  title: PropTypes.string,\n  number: PropTypes.number,\n  state: PropTypes.oneOf([IssueState.OPEN, IssueState.CLOSED]),\n  author: PropTypes.string,\n  createdAt: PropTypes.string,\n  commentCount: PropTypes.number,\n  tabIndex: PropTypes.number,\n  loading: PropTypes.bool,\n};\n\nIssueListItem.defaultProps = {\n  author: 'unknown'\n};\n\nexport default compose(\n  withSkeletonProvider({\n    title: placeholder(50),\n    author: placeholder(10),\n    state: null,\n  }),\n  withStyles(styles),\n)(IssueListItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\n\nconst ISSUES_QUERY = gql`\n  query IssuesList($owner: String!, $name: String!, $state: [IssueState!], $cursor: String, $pageSize: Int) {\n    repository(owner: $owner, name: $name) {\n      issues(\n          first: $pageSize,\n          states: $state,\n          orderBy: { field: UPDATED_AT, direction: DESC },\n          after: $cursor\n        ) {\n        pageInfo {\n          endCursor\n          hasNextPage\n        }\n        edges {\n          cursor\n          node {\n            id\n            number\n            title\n            author { login }\n            state\n            createdAt\n            comments { totalCount }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst IssuesLoader = ({ children, owner, name, state, pageSize }) => {\n  const variables = {\n    owner,\n    name,\n    state: [state],\n    pageSize,\n  };\n\n  return (\n    <Query\n      query={ISSUES_QUERY}\n      variables={variables}\n    >\n      {({ loading, data, error, fetchMore }) => {\n        const { repository = {} } = data;\n        const { pageInfo = {}, edges = [] } = repository.issues || {};\n\n        return children({\n          loading,\n          error,\n          issues: edges.map(edge => edge.node),\n          hasNextPage: pageInfo.hasNextPage,\n          onLoadMore: () => fetchMore({\n            query: ISSUES_QUERY,\n            variables: {\n              ...variables,\n              cursor: repository.issues.pageInfo.endCursor,\n            },\n            updateQuery: (prev, { fetchMoreResult }) => {\n              if (!fetchMoreResult) return prev;\n              return {\n                repository: {\n                  ...prev.repository,\n                  issues: {\n                    ...prev.repository.issues,\n                    // update pagination info\n                    pageInfo: fetchMoreResult.repository.issues.pageInfo,\n                    // append new issues\n                    edges: [\n                      ...prev.repository.issues.edges,\n                      ...fetchMoreResult.repository.issues.edges,\n                    ]\n                  }\n                }\n              };\n            },\n          }),\n        });\n      }}\n    </Query>\n  );\n};\n\nIssuesLoader.propTypes = {\n  owner: PropTypes.string,\n  name: PropTypes.string,\n  state: PropTypes.string,\n  pageSize: PropTypes.number,\n  children: PropTypes.func.isRequired,\n};\n\nIssuesLoader.defaultProps = {\n  pageSize: 10,\n};\n\nexport default IssuesLoader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nconst styles = theme => ({\n  root: {\n    justifyContent: 'center',\n  },\n});\n\nconst Pagination = ({ classes, children, onLoadMore, hasNextPage }) => (\n  <Toolbar className={classes.root}>\n    <Button\n      disabled={!hasNextPage}\n      onClick={onLoadMore}\n      color=\"primary\"\n    >\n      Load more\n    </Button>\n  </Toolbar>\n);\n\nPagination.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string),\n  children: PropTypes.node,\n  disabled: PropTypes.bool,\n  onLoadMore: PropTypes.func,\n};\n\nexport default withStyles(styles)(Pagination);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport List from '@material-ui/core/List';\n\nimport IssueListItem from './IssueListItem';\nimport { IssueState } from '../constants';\nimport IssuesLoader from './IssuesLoader';\nimport Pagination from './Pagination';\n\n\n// TODO: add empty state\nconst Loading = () => (\n  <>\n    <IssueListItem loading />\n    <IssueListItem loading />\n    <IssueListItem loading />\n    <IssueListItem loading />\n  </>\n);\n\nclass IssueList extends Component {\n  static propTypes = {\n    owner: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    state: PropTypes.string,\n  };\n\n  static defaultProps = {\n    state: IssueState.OPEN,\n  }\n\n  render() {\n    const { owner, name, state } = this.props;\n    return (\n      <IssuesLoader\n        owner={owner}\n        name={name}\n        state={state}\n      >\n        {({ loading, issues, hasNextPage, onLoadMore }) => {\n          if (loading) return <Loading />;\n          return (\n            <div>\n              <List>\n                {issues.map(issue => (\n                  <Link key={issue.id} to={`/${owner}/${name}/issues/${issue.number}`}>\n                    <IssueListItem\n                      number={issue.number}\n                      title={issue.title}\n                      author={issue.author ? issue.author.login : undefined}\n                      createdAt={issue.createdAt}\n                      commentCount={issue.comments.totalCount}\n                      state={issue.state}\n                      tabIndex={-1}\n                    />\n                  </Link>\n                ))}\n              </List>\n              <Pagination\n                onLoadMore={onLoadMore}\n                hasNextPage={hasNextPage}\n              />\n            </div>\n          );\n        }}\n      </IssuesLoader>\n    );\n  }\n}\n\nexport default IssueList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport { withStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport { withSkeletonProvider } from './Skeleton';\n\nconst styles = theme => ({\n  root: {},\n});\n\nconst IssueListFilter = ({ classes, state, onChange, openedCount, closedCount, ...props }) => {\n  return (\n    <Tabs\n      value={state}\n      onChange={onChange}\n      indicatorColor=\"primary\"\n      {...props}\n    >\n      <Tab value=\"OPEN\" label={openedCount ? `${openedCount} OPEN` : 'OPEN'} />\n      <Tab value=\"CLOSED\" label={closedCount ? `${closedCount} CLOSED` : 'CLOSED'} />\n    </Tabs>\n  );\n};\n\nIssueListFilter.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string),\n  state: PropTypes.string,\n  openedCount: PropTypes.number,\n  closedCount: PropTypes.number,\n  loading: PropTypes.bool,\n};\n\nexport default compose(\n  withStyles(styles),\n  withSkeletonProvider(),\n)(IssueListFilter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nimport { withSkeletonProvider, placeholder, Span } from './Skeleton';\n\nconst styles = theme => ({\n  root: {},\n});\n\nconst RepoHeader = ({ classes, children, repository }) => {\n  const { name, owner, description } = repository;\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h6\">\n        <Span>{owner.login} / {name}</Span>\n      </Typography>\n      <Typography variant=\"subtitle1\" color=\"textSecondary\">\n        <Span>{description}</Span>\n      </Typography>\n    </div>\n  );\n};\n\nRepoHeader.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string),\n  repository: PropTypes.shape({\n    owner: PropTypes.shape({\n      login: PropTypes.string,\n    }),\n    name: PropTypes.string,\n    description: PropTypes.string,\n  }),\n};\n\nconst isLoading = props => !props.repository;\nexport default compose(\n  withSkeletonProvider({\n    repository: {\n      owner: {\n        login: placeholder(15)\n      },\n      name: placeholder(15),\n      description: placeholder(160),\n    }\n  }, isLoading),\n  withStyles(styles),\n)(RepoHeader);\n","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Query } from 'react-apollo';\nimport queryString from 'query-string';\nimport gql from 'graphql-tag';\n\nimport IssueList from '../components/IssueList';\nimport Header from '../components/LayoutHeader';\nimport Content from '../components/LayoutContent';\nimport IssueListFilter from '../components/IssueListFilter';\nimport { IssueState } from '../constants';\nimport RepoHeader from '../components/RepoHeader';\n\nconst REPO_INFO_QUERY = gql`\nquery Repo($owner: String!, $name: String!) {\n  repository(owner: $owner, name: $name) {\n    name\n    owner { login }\n    description\n    openedIssues: issues(states: OPEN ) {\n      totalCount\n    }\n    closedIssues: issues(states: CLOSED) {\n      totalCount\n    }\n  }\n}\n`;\n\nconst styles = {\n  content: {\n    paddingTop: 0,\n  },\n  filters: {\n    marginBottom: 16,\n  }\n};\n\nclass Repo extends Component {\n\n  handleChangeState = (e, value) => {\n    const { history } = this.props;\n    history.push({ search: `?state=${value}` });\n  }\n\n  render() {\n    const { classes, match, location } = this.props;\n    const { owner, name } = match.params;\n    const { state = IssueState.OPEN } = queryString.parse(location.search);\n\n    return (\n      <Query\n        query={REPO_INFO_QUERY}\n        variables={{ owner, name }}\n      >\n        {({ data: { repository } }) => {\n          const { openedIssues = {}, closedIssues = {} } = repository || {};\n          return (\n            <>\n              <Header>\n                <RepoHeader repository={repository} />\n              </Header>\n              <Content className={classes.content}>\n                <IssueListFilter\n                  className={classes.filters}\n                  state={state}\n                  openedCount={openedIssues.totalCount}\n                  closedCount={closedIssues.totalCount}\n                  onChange={this.handleChangeState}\n                />\n                <IssueList\n                  owner={owner}\n                  name={name}\n                  state={state}\n                />\n              </Content>\n            </>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default withStyles(styles)(Repo);\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Content from '../components/LayoutContent';\n\nconst styles = {\n  content: {\n    paddingTop: 120,\n    textAlign: 'center',\n  }\n};\n\nconst NotFound = ({ classes }) => (\n  <Content className={classes.content}>\n    <Typography variant=\"h3\">404 Not found</Typography>\n  </Content>\n);\n\nexport default withStyles(styles)(NotFound);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport IssuePage from './IssuePage';\nimport SearchPage from './SearchPage';\nimport IssuesPage from './IssuesPage';\nimport NotFoundPage from './NotFoundPage';\n\nconst Routes = () => (\n  <Switch>\n    <Route path=\"/\" exact component={SearchPage} />\n    <Route path=\"/search\" component={SearchPage} />\n    <Route path=\"/:owner/:name\" exact component={IssuesPage} />\n    <Route path=\"/:owner/:name/issues/:number\" exact component={IssuePage} />\n    <Route component={NotFoundPage} />\n  </Switch>\n);\n\nRoutes.propTypes = {};\n\nexport default Routes;\n","import React, { Component } from \"react\";\nimport Layout from \"./components/Layout\";\nimport Routes from \"./routes\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Layout>\n        <Routes />\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { emphasize } from '@material-ui/core/styles/colorManipulator';\n\n\nconst styles = theme => {\n  const fadeColor = emphasize(theme.palette.background.paper, 0.1);\n  return {\n    '@global': {\n      html: {\n        WebkitFontSmoothing: 'antialiased',\n        MozOsxFontSmoothing: 'grayscale',\n        // Change from `box-sizing: content-box` so that `width`\n        // is not affected by `padding` or `border`.\n        boxSizing: 'border-box',\n      },\n      '*, *::before, *::after': {\n        boxSizing: 'inherit',\n      },\n      body: {\n        margin: 0, // Remove the margin in all browsers.\n        backgroundColor: theme.palette.background.default,\n        color: theme.palette.text.primary,\n        '@media print': {\n          // Save printer ink.\n          backgroundColor: theme.palette.common.white,\n        },\n      },\n      a: {\n        textDecoration: 'none',\n        color: theme.palette.primary.main,\n      },\n      strong: {\n        fontWeight: 500,\n      },\n      '@keyframes pending-animation': {\n        '0%': { opacity: 0.8 },\n        '50%': { opacity: 0.4 },\n        '100%': { opacity: 0.8 },\n      },\n      '.skeleton-pending': {\n        color: `${fadeColor} !important`,\n        background: `${fadeColor} !important`,\n        userSelect: 'none',\n        animationName: 'pending-animation',\n        animationDuration: '1.5s',\n        animationIterationCount: 'infinite',\n        animationTimingFunction: 'linear',\n      }\n    },\n  };\n};\n\nconst CssBaseline = ({ children }) => children;\n\nCssBaseline.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default withStyles(styles)(CssBaseline);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloProvider } from 'react-apollo';\nimport { ApolloClient } from 'apollo-client';\nimport apolloLogger from 'apollo-link-logger';\nimport { ApolloLink } from 'apollo-boost';\nimport { createHttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Theme from './components/Theme';\nimport CssBaseline from './components/CssBaseline';\n\nconst httpLink = createHttpLink({\n  uri: 'https://api.github.com/graphql',\n  headers: {\n    authorization: `Bearer ${process.env.REACT_APP_GITHUB_TOKEN}`,\n  }\n});\n\nconst client = new ApolloClient({\n  link: ApolloLink.from([\n    apolloLogger,\n    httpLink\n  ]),\n  cache: new InMemoryCache(),\n});\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <ApolloProvider client={client}>\n      <Theme>\n        <CssBaseline>\n          <App />\n        </CssBaseline>\n      </Theme>\n    </ApolloProvider>\n  </BrowserRouter>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}